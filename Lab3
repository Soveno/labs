#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <time.h>
#include <fcntl.h>
#include <sys/types.h>
#include <errno.h>
void getTime(struct tm *current_time);
int main()
{
struct tm *time = malloc(sizeof( struct tm ));
int fd[2];
char path[256] = "file.fifo";
if(pipe(fd) == 0)
{
switch( fork() )
{
case -1:
printf("Can't create process\n");
exit(-1);
case 0:
getTime(time);
write(fd[1], time, sizeof(struct tm));
exit(0);
default:
wait();
read(fd[0], time, sizeof(struct tm));
printf("Time from PIPE: %d:%d:%d\n",time->tm_hour, time->tm_min, time->tm_sec);
break;
}
}
else
{
printf("Can't create pipe.\n");
}
if(mkfifo(path, 0777) == 0)
{
*fd = open(path, O_RDWR );
if(*fd != -1)
{
switch( fork() )
{
case -1:
printf("Can't create process\n");
exit(-1);
case 0:
sleep(1);
getTime(time);
write(*fd, time, sizeof(struct tm));
exit(0);
default:
wait();
read(*fd, time, sizeof(struct tm));
printf("Time from FIFO: %d:%d:%d\n",time->tm_hour, time->tm_min, time->tm_sec);
break;
}
}
else
{
printf("Create, but can't open FIFO.\n");
}
}
else
{
printf("Can't create FIFO.\n");
}
}
void getTime(struct tm *current_time)
{
time_t sec = 0;
time(&sec);
*current_time = *(localtime(&sec));
}
